{"version":3,"file":"form-create.core.min.js","sources":["../src/components/formCreate.js","../src/core/mergeJsxProps.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/components/fragment.jsx","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import {deepExtend} from '@xl-form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            this.formCreate.mounted();\n            this.$emit('input', this.$f);\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@xl-form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, deepExtend, extend, isFunction, isPlainObject} from '@xl-form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = deepExtend({}, this._data);\n        return clone;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import {deepExtend, isUndef} from '@xl-form-create/utils';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nexport function toJson(obj) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return PREFIX + val + SUFFIX;\n    });\n}\n\nfunction makeFn(fn) {\n    return eval('(function(){return ' + fn + ' })()')\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v) || !v.indexOf) return v;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                return makeFn(v.indexOf('function') === -1 && v.indexOf('(') !== 0 ? 'function ' + v : v);\n            } else if (!mode && v.indexOf('function') > -1)\n                return makeFn(v)\n        } catch (e) {\n            console.error(`[form-create]解析失败:${v}`);\n            return undefined;\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\nexport function copyRule(rule, mode) {\n    return copyRules([rule], mode)[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], rules, mode);\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@xl-form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@xl-form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@xl-form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.updateKey(id);\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n        this.parent = null;\n\n        this.update(handle);\n        this.init();\n    }\n\n    updateKey(id, parent) {\n        this.key = 'key_' + id;\n        parent && this.parent && this.parent.updateKey(uniqueId(), parent);\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@xl-form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) {\n            if (clear && parser.parent)\n                this.clearCache(parser.parent, clear);\n            return;\n        }\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            return this.renderParser(this.$handle.parsers[id]);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (parser.type === 'hidden') return;\n        if ((!parser.isDef || parser.rule.native !== false) && parser.rule.hidden) return;\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        const model = this.$handle.modelEvent(parser);\n        if (!custom)\n            data.on(model.event || model, (value) => {\n                this.onInput(parser, value);\n            }).props(model.prop || 'value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (!this.$handle.isset(child) && child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject, isUndef} from '@xl-form-create/utils';\nimport {toJson} from './util';\nimport {getRule} from './handle';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(getRule(rule)) + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(getRule(rule)) + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm).filter(field => {\n                    const sub = subForm[field];\n                    return Array.isArray(sub) ? sub.length : !isUndef(sub);\n                }), len = keys.length, subLen;\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n                if (parser.type === 'hidden') {\n                    parser.rule.value = parser.defaultValue;\n                    return;\n                }\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@xl-form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = this.fc = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n        this.issetRule = [];\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    isset(rule) {\n        return this.issetRule.indexOf(rule) > -1;\n    }\n\n    loadRule(rules, parent) {\n        rules.map((_rule, index) => {\n            if (parent && isString(_rule)) return;\n\n            if (!_rule || !_rule.type)\n                return console.error('未定义生成规则的 type 字段\\nrule: ' + JSON.stringify(_rule ? getRule(_rule) : _rule) + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    rules[index] = _rule = copyRule(_rule);\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field)) {\n                this.issetRule.push(_rule);\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(rule) + errMsg());\n            }\n            parser.parent = parent || null;\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, parser);\n            }\n\n            if (!parent) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                    this.vm.$emit('set-value', parser.field, value, this.fCreateApi);\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        return new (this.fc.parsers[toString(rule.type).toLocaleLowerCase()] || BaseParser)(this, rule, '' + uniqueId());\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (!({}).hasOwnProperty.call(rule, k)) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const _fieldKey = toLine(`${emitKey}-${eventName}`);\n            const fieldKey = _fieldKey.replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n                this.vm.$emit('emit-event', fieldKey, ...arg);\n                if (_fieldKey !== fieldKey) {\n                    this.vm.$emit(_fieldKey, ...arg);\n                    this.vm.$emit('emit-event', fieldKey, ...arg);\n                }\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        return this.fieldList[id] || this.customData[id] || this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'hidden' && (!parser.isDef || parser.rule.native !== false))\n                        parser.updateKey(uniqueId(), true);\n                    else if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value, this.fCreateApi)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                //TODO 位置可自定义\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                parser.parent && this.$render.clearCache(parser.parent);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field, name} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (name && this.customData[name]) {\n            $del(this.customData, name);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser, true)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@xl-form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue, options) {\n            if (options && isPlainObject(options))\n                margeGlobal(globalConfig, options);\n\n            if (Vue._installedFormCreate === true) return;\n            Vue._installedFormCreate = true;\n            _vue = Vue;\n\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install: FormCreate.install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@xl-form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser, field = 'col') {\n        let col = parser.rule[field] || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'][field] || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type][field] || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType][field] || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["formCreateName","$FormCreate","FormCreate","components","name","componentName","props","rule","type","Array","required","option","Object","default","value","data","formData","undefined","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","$set","deepExtend","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","objects","initial","reduce","a","b","key","indexOf","arrA","arrB","event","hook","mergeFn","fn1","fn2","apply","arguments","defVData","on","VData","init","_data","classList","status","isUndef","isArray","merge","class","isPlainObject","toString","keys","_this","length","keyList","objList","forEach","prototype","val","obj","vdataField","concat","baseRule","validate","options","col","children","control","emit","template","emitPrefix","native","info","creatorFactory","title","field","Creator","creatorTypeFactory","typeName","maker","isFunction","extend","clone","constructor","keyAttrs","attr","objAttrs","opt","arrAttrs","PREFIX","SUFFIX","toJson","JSON","stringify","_isVue","__inject","__origin","__emit","makeFn","fn","eval","parseJson","json","mode","parse","k","v","replace","e","console","error","enumerable","writable","configurable","copyRule","copyRules","rules","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","isString","getRule","ruleToMaker","map","r","defineProperties","find","findField","model","origin","i","isValidChildren","call","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","id","vData","vNode","originType","isDef","el","uniqueId","refName","formItemRefName","updateKey","root","ctrlRule","modelEvent","parent","update","$handle","deleted","formValue","$de","debounce","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","Vue","compile","errMsg","getInjectData","setTemplateProps","fCreateApi","$off","$on","_this2","onInput","hidden","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","prop","getFormData","inputVData","child","__fc__","_this4","removeField","isset","vdata","fApi","$props","Api","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","set","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","sub","len","validFn","clearValidateState","validateField","resetFields","resetField","refreshControl","defaultValue","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","issetRule","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","hasOwnProperty","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","_fieldKey","toLine","fieldKey","arg","run","validateControl","submitBtn","$watch","o","_this6","deep","immediate","controls","getControl","_this7","removeControl","_this8","addParserWitch","$refs","mountedParser","onReload","delParser","$del","_this9","$nextTick","unWatch","className","__field__","NAME","functional","ctx","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","isBool","isElement","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","_installedFormCreate","$formCreate","mount","remove","makers","install","BaseForm","mCol","pCol","deepExtendArgs"],"mappings":"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"}